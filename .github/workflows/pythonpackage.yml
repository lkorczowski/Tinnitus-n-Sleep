# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches: 
      - '*'

jobs:
  build:
    name: python-pip
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest

  miniconda:
    name: Ex3 Linux
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1
        with:
           activate-environment: anaconda-client-env
           environment-file: environment.yaml
           python-version: 3.7
           condarc-file: etc/example-condarc.yml
           auto-activate-base: false
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          pytest
          
  condaspyder:
    name: Ex4 Linux
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@enh/channels
        with:
           activate-environment: foo
           python-version: 3.7
           environment-file: environment.yaml
           channels: conda-forge,spyder-ide
      - shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          pytest
